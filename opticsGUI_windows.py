#!/usr/bin/env python3

import sys
import os
import numpy as np
import pandas as pd
import logging
import pickle
import re
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import pyqtgraph as pg
pg.setConfigOption('background', 'w')
pg.setConfigOption('foreground', 'k')
from ocelot import *
from flash_lattice.lattice.lattice_manager import FLASHlattice


class ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Optics tool")
        MainWindow.resize(1800, 900)

        self.centralwidget = QSplitter(Qt.Horizontal)
        MainWindow.setCentralWidget(self.centralwidget)
        self.centralwidget.setObjectName("centralWidget")
        settingsFrame = QGroupBox("Input settings")
        self.settingsLayout = QVBoxLayout()
        settingsFrame.setLayout(self.settingsLayout)
        operationsFrame = QGroupBox("Operations")
        self.operationsLayout = QVBoxLayout()
        operationsFrame.setLayout(self.operationsLayout)
        magnetsFrame = QGroupBox("Magnet controls")
        self.magnetsGroupLayout = QVBoxLayout()
        magnetsFrame.setLayout(self.magnetsGroupLayout)
        self.centralwidget.addWidget(settingsFrame)
        self.centralwidget.addWidget(operationsFrame)
        self.centralwidget.addWidget(magnetsFrame)
        self.centralwidget.setSizes([300, 1100, 400])

        self._buildSettingsFrame()
        self._buildOperationsFrame()
        self._buildMagnetsFrame()

    def _buildSettingsFrame(self):
        boldFont = QFont()
        boldFont.setBold(True)

        latticeBox = QGroupBox("Lattice")
        latticeLayout = QGridLayout()
        latticeBox.setLayout(latticeLayout)
        latticeLayout.addWidget(QLabel("Section:"), 0, 0, 1, 2)
        self.lat_section = QComboBox()
        self.lat_section.addItem('None')
        latticeLayout.addWidget(self.lat_section, 0, 2, 1, 4)
        latticeLayout.addWidget(QLabel("start:"), 1, 0, 1, 1)
        self.section_start = QComboBox()
        self.section_start.setObjectName('section_start')
        latticeLayout.addWidget(self.section_start, 1, 1, 1, 2)
        latticeLayout.addWidget(QLabel("stop:"), 1, 3, 1, 1)
        self.section_stop = QComboBox()
        self.section_stop.setObjectName('section_stop')
        latticeLayout.addWidget(self.section_stop, 1, 4, 1, 2)
        latticeLayout.addItem(QSpacerItem(2, 1), 3, 0, 1, 2)
        self.settingsLayout.addWidget(latticeBox)

        # Twiss parameters
        twissBox = QGroupBox("Input \"Twiss\" params")
        twissGrid = QGridLayout()
        twissBox.setLayout(twissGrid)
        par_label = QLabel("Param.")
        par_label.setFont(boldFont)
        par_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(par_label, 0, 0, 1, 2)
        des_label = QLabel("Design")
        des_label.setFont(boldFont)
        des_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(des_label, 0, 2, 1, 2)
        self.tw0_real_label = QLabel("Real")
        self.tw0_real_label.setFont(boldFont)
        self.tw0_real_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.tw0_real_label, 0, 4, 1, 2)
        betaxLabel = QLabel("\u03b2<sub>x</sub>")
        betaxLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        betaxLabel.setFont(boldFont)
        twissGrid.addWidget(betaxLabel, 1, 0, 1, 2)
        self.betax_des = QLabel("None")
        self.betax_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.betax_des, 1, 2, 1, 2)
        self.betax = QDoubleSpinBox()
        self.betax.setAlignment(Qt.AlignCenter)
        self.betax.setValue(1.0)
        self.betax.setRange(0, 500.0)
        self.betax.setDecimals(3)
        self.betax.setSingleStep(0.100)
        twissGrid.addWidget(self.betax, 1, 4, 1, 2)
        twissGrid.addWidget(QLabel("m"), 1, 6, 1, 1)
        alphaxLabel = QLabel("\u03b1<sub>x</sub>")
        alphaxLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        alphaxLabel.setFont(boldFont)
        twissGrid.addWidget(alphaxLabel, 2, 0, 1, 2)
        self.alphax_des = QLabel("None")
        self.alphax_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.alphax_des, 2, 2, 1, 2)
        self.alphax = QDoubleSpinBox()
        self.alphax.setAlignment(Qt.AlignCenter)
        self.alphax.setValue(0.0)
        self.alphax.setRange(-200.0, 200.0)
        self.alphax.setDecimals(3)
        self.alphax.setSingleStep(0.01)
        twissGrid.addWidget(self.alphax, 2, 4, 1, 2)
        betayLabel = QLabel("\u03b2<sub>y</sub>")
        betayLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        betayLabel.setFont(boldFont)
        twissGrid.addWidget(betayLabel, 3, 0, 1, 2)
        self.betay_des = QLabel("None")
        self.betay_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.betay_des, 3, 2, 1, 2)
        self.betay = QDoubleSpinBox()
        self.betay.setAlignment(Qt.AlignCenter)
        self.betay.setValue(1.0)
        self.betay.setRange(0, 500.0)
        self.betay.setDecimals(3)
        self.betay.setSingleStep(0.100)
        twissGrid.addWidget(self.betay, 3, 4, 1, 2)
        twissGrid.addWidget(QLabel("m"), 3, 6, 1, 1)
        alphayLabel = QLabel("\u03b1<sub>y</sub>")
        alphayLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        alphayLabel.setFont(boldFont)
        twissGrid.addWidget(alphayLabel, 4, 0, 1, 2)
        self.alphay_des = QLabel("None")
        self.alphay_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.alphay_des, 4, 2, 1, 2)
        self.alphay = QDoubleSpinBox()
        self.alphay.setAlignment(Qt.AlignCenter)
        self.alphay.setValue(0.0)
        self.alphay.setRange(-200.0, 200.0)
        self.alphay.setDecimals(3)
        self.alphay.setSingleStep(0.010)
        twissGrid.addWidget(self.alphay, 4, 4, 1, 2)
        DxLabel = QLabel("Dx")
        DxLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        DxLabel.setFont(boldFont)
        twissGrid.addWidget(DxLabel, 5, 0, 1, 2)
        self.Dx_des = QLabel("None")
        self.Dx_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.Dx_des, 5, 2, 1, 2)
        self.Dx = QDoubleSpinBox()
        self.Dx.setAlignment(Qt.AlignCenter)
        self.Dx.setValue(0.0)
        self.Dx.setDecimals(2)
        self.Dx.setSingleStep(0.1)
        self.Dx.setRange(-2000.0, 2000.0)
        twissGrid.addWidget(self.Dx, 5, 4, 1, 2)
        twissGrid.addWidget(QLabel("mm"), 5, 6, 1, 1)
        DxpLabel = QLabel("Dx\'")
        DxpLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        DxpLabel.setFont(boldFont)
        twissGrid.addWidget(DxpLabel, 6, 0, 1, 2)
        self.Dxp_des = QLabel("None")
        self.Dxp_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.Dxp_des, 6, 2, 1, 2)
        self.Dxp = QDoubleSpinBox()
        self.Dxp.setAlignment(Qt.AlignCenter)
        self.Dxp.setValue(0)
        self.Dxp.setDecimals(2)
        self.Dxp.setSingleStep(0.1)
        self.Dxp.setRange(-2000, 2000)
        twissGrid.addWidget(self.Dxp, 6, 4, 1, 2)
        twissGrid.addWidget(QLabel("10<sup>-3</sup>"), 6, 6, 1, 1)
        DyLabel = QLabel("Dy")
        DyLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        DyLabel.setFont(boldFont)
        twissGrid.addWidget(DyLabel, 7, 0, 1, 2)
        self.Dy_des = QLabel("None")
        self.Dy_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.Dy_des, 7, 2, 1, 2)
        self.Dy = QDoubleSpinBox()
        self.Dy.setAlignment(Qt.AlignCenter)
        self.Dy.setValue(0.0)
        self.Dy.setDecimals(2)
        self.Dy.setSingleStep(0.1)
        self.Dy.setRange(-2000, 2000)
        twissGrid.addWidget(self.Dy, 7, 4, 1, 2)
        twissGrid.addWidget(QLabel("mm"), 7, 6, 1, 1)
        DypLabel = QLabel("Dy\'")
        DypLabel.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        DypLabel.setFont(boldFont)
        twissGrid.addWidget(DypLabel, 8, 0, 1, 2)
        self.Dyp_des = QLabel("None")
        self.Dyp_des.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        twissGrid.addWidget(self.Dyp_des, 8, 2, 1, 2)
        self.Dyp = QDoubleSpinBox()
        self.Dyp.setAlignment(Qt.AlignCenter)
        self.Dyp.setValue(0.0)
        self.Dyp.setDecimals(2)
        self.Dyp.setSingleStep(0.1)
        self.Dyp.setRange(-2000, 2000)
        twissGrid.addWidget(self.Dyp, 8, 4, 1, 2)
        twissGrid.addWidget(QLabel("10<sup>-3</sup>"), 8, 6, 1, 1)
        self.settingsLayout.addWidget(twissBox)
        self.settingsLayout.addStretch()

        # XTDS box
        polarixBox = QGroupBox("PolariX calculator")
        polarixLayout = QGridLayout()
        polarixBox.setLayout(polarixLayout)
        polarixLayout.addWidget(QLabel("Energy [MeV]"), 0, 0)
        self.bunch_energy = QDoubleSpinBox()
        self.bunch_energy.setSingleStep(10.0)
        self.bunch_energy.setRange(450.0, 3000.0)
        self.bunch_energy.setValue(690.0)
        polarixLayout.addWidget(self.bunch_energy, 0, 1)
        polarixLayout.addWidget(QLabel("\u03b5<sub>n</sub> [mm\u0387mrad]"), 1, 0)
        self.bunch_emmitance = QDoubleSpinBox()
        self.bunch_emmitance.setValue(2.0)
        self.bunch_emmitance.setSingleStep(0.1)
        self.bunch_emmitance.setRange(0, 20.0)
        polarixLayout.addWidget(self.bunch_emmitance, 1, 1)
        polarixLayout.addWidget(QLabel("Voltage [MV]"), 2, 0)
        self.xtds_voltage = QDoubleSpinBox()
        self.xtds_voltage.setValue(10.0)
        self.xtds_voltage.setSingleStep(1.0)
        self.xtds_voltage.setRange(0, 30.0)
        polarixLayout.addWidget(self.xtds_voltage, 2, 1)
        polarixLayout.addWidget(QLabel("Polarisation"), 3, 0)
        self.streaking_plane = QComboBox()
        self.streaking_plane.addItems(['X', 'Y'])
        self.streaking_plane.setCurrentIndex(1)
        polarixLayout.addWidget(self.streaking_plane, 3, 1)
        polarixLayout.addWidget(QLabel("Screen"), 4, 0)
        self.xtds_calc_resolution_screen = QComboBox()
        self.xtds_calc_resolution_screen.addItems(['11FLFXTDS', '8FLFDUMP'])
        polarixLayout.addWidget(self.xtds_calc_resolution_screen, 4, 1)
        resultBox = QGroupBox()
        resultLayout = QGridLayout()
        resultBox.setLayout(resultLayout)
        resolution_label = QLabel("Time resolution =")
        resolution_label.setFont(boldFont)
        resolution_label.setAlignment(Qt.AlignRight | Qt.AlignVCenter)
        resultLayout.addWidget(resolution_label, 0, 0)
        self.xtds_timeres = QLabel()
        self.xtds_timeres.setFont(boldFont)
        resultLayout.addWidget(self.xtds_timeres, 0, 1)
        streak_label = QLabel("Streak =")
        streak_label.setFont(boldFont)
        streak_label.setAlignment(Qt.AlignRight | Qt.AlignVCenter)
        resultLayout.addWidget(streak_label, 1, 0)
        self.xtds_streak = QLabel()
        self.xtds_streak.setFont(boldFont)
        resultLayout.addWidget(self.xtds_streak, 1, 1)
        polarixLayout.addWidget(resultBox, 5, 0, 2, 2)
        self.settingsLayout.addWidget(polarixBox)

    def _buildOperationsFrame(self):
        hTabs = QTabWidget()
        self.operationsLayout.addWidget(hTabs)
        self.tab_opticsFunctions = QWidget()
        self.tab_emittanceMeasurement = QWidget()
        hTabs.addTab(self.tab_opticsFunctions, "&Optics functions")
        hTabs.addTab(self.tab_emittanceMeasurement, "&Emittance measurements")
        self._buildOpticsFrame()

    def _buildOpticsFrame(self):
        boldFont = QFont()
        boldFont.setBold(True)

        opticsFunctionsLayout = QVBoxLayout()
        controlsSplitter = QSplitter(Qt.Horizontal)
        # upper plot box
        topFrame = QGroupBox("upper plot")
        topLayout = QGridLayout()
        topLayout.addWidget(QLabel("function"), 0, 0)
        self.top_function = QComboBox()
        self.top_function.addItems(['beta', 'sqrt(beta)', 'alpha', 'phase advance', 'dispersion'])
        topLayout.addWidget(self.top_function, 0, 1)
        self.axtop_xactive = QCheckBox("\tx")
        self.axtop_xactive.setChecked(True)
        topLayout.addWidget(self.axtop_xactive, 1, 0)
        self.axtop_yactive = QCheckBox("\ty")
        self.axtop_yactive.setChecked(True)
        topLayout.addWidget(self.axtop_yactive, 1, 1)
        self.axtop_log = QCheckBox("\tlog")
        topLayout.addWidget(self.axtop_log, 2, 0)
        self.axtop_autoscale = QCheckBox("\tautoscale")
        self.axtop_autoscale.setChecked(True)
        topLayout.addWidget(self.axtop_autoscale, 2, 1)
        topFrame.setLayout(topLayout)
        controlsSplitter.addWidget(topFrame)
        # bottom plot box
        bottomFrame = QGroupBox("bottom plot")
        bottomLayout = QGridLayout()
        bottomLayout.addWidget(QLabel("function"), 0, 0)
        self.bottom_function = QComboBox()
        self.bottom_function.addItems(['beta', 'alpha', 'phase advance', 'dispersion'])
        self.bottom_function.setCurrentIndex(3)
        bottomLayout.addWidget(self.bottom_function, 0, 1)
        self.axbottom_xactive = QCheckBox("\tx")
        self.axbottom_xactive.setChecked(True)
        bottomLayout.addWidget(self.axbottom_xactive, 1, 0)
        self.axbottom_yactive = QCheckBox("\ty")
        self.axbottom_yactive.setChecked(True)
        bottomLayout.addWidget(self.axbottom_yactive, 1, 1)
        self.axbottom_log = QCheckBox("\tlog")
        bottomLayout.addWidget(self.axbottom_log, 2, 0)
        self.axbottom_autoscale = QCheckBox("\tautoscale")
        self.axbottom_autoscale.setChecked(True)
        bottomLayout.addWidget(self.axbottom_autoscale, 2, 1)
        bottomFrame.setLayout(bottomLayout)
        controlsSplitter.addWidget(bottomFrame)
        # match box
        matchFrame = QGroupBox("match")
        matchLayout = QGridLayout()
        matchLayout.addWidget(QLabel("Preset"), 0, 0)
        self.match_preset = QComboBox()
        self.match_preset.addItems(['theory', 'compression', 'plasma cell', 'beam capture', '11FLFXTDS', '8FLFDUMP', 'tomography'])
        matchLayout.addWidget(self.match_preset, 0, 1)
        self.do_match = QPushButton("MATCH")
        self.do_match.setMinimumHeight(49)
        matchLayout.addWidget(self.do_match, 1, 4, 2, 1)
        self.match_combo_label_1 = QLabel("match start")
        matchLayout.addWidget(self.match_combo_label_1, 1, 0)
        self.match_ref_plane = QComboBox()
        matchLayout.addWidget(self.match_ref_plane, 1, 1)
        self.match_combo_label_2 = QLabel("match target")
        matchLayout.addWidget(self.match_combo_label_2, 1, 2)
        self.match_target_plane = QComboBox()
        matchLayout.addWidget(self.match_target_plane, 1, 3)
        self.match_var_1_active = QCheckBox("\u03b2x (m)")
        self.match_var_1_active.setChecked(False)
        self.match_var_1_active.setEnabled(False)
        matchLayout.addWidget(self.match_var_1_active, 2, 0)
        self.match_var_1 = QDoubleSpinBox()
        self.match_var_1.setValue(1.0)
        self.match_var_1.setRange(0.001, 100.0)
        self.match_var_1.setSingleStep(0.1)
        self.match_var_1.setDecimals(3)
        self.match_var_1.setEnabled(False)
        matchLayout.addWidget(self.match_var_1, 2, 1)
        self.match_var_2_active = QCheckBox("\u03b2y (m)")
        self.match_var_2_active.setChecked(False)
        self.match_var_2_active.setEnabled(False)
        matchLayout.addWidget(self.match_var_2_active, 2, 2)
        self.match_var_2 = QDoubleSpinBox()
        self.match_var_2.setValue(1.0)
        self.match_var_2.setRange(0.001, 100.0)
        self.match_var_2.setSingleStep(0.1)
        self.match_var_2.setDecimals(3)
        self.match_var_2.setEnabled(False)
        matchLayout.addWidget(self.match_var_2, 2, 3)
        self.match_var_3_active = QCheckBox("z (m)")
        self.match_var_3_active.setChecked(False)
        self.match_var_3_active.setEnabled(False)
        matchLayout.addWidget(self.match_var_3_active, 3, 0)
        self.match_var_3 = QDoubleSpinBox()
        self.match_var_3.setRange(-0.25, 0.25)
        self.match_var_3.setSingleStep(0.001)
        self.match_var_3.setDecimals(3)
        self.match_var_3.setValue(-0.194)
        self.match_var_3.setEnabled(False)
        matchLayout.addWidget(self.match_var_3, 3, 1)
        matchFrame.setLayout(matchLayout)
        controlsSplitter.addWidget(matchFrame)
        controlsSplitter.setSizes([250, 250, 600])
        opticsFunctionsLayout.addWidget(controlsSplitter)

        # plots
        self.plot_window = pg.GraphicsLayoutWidget()
        self.plot_top = self.plot_window.addPlot(0, 0)
        self.plot_top.getAxis('left').setLabel(text='betas', units='m')
        self.plot_top.showGrid(x=True, y=True)
        self.lattice_plot = self.plot_window.addPlot(1, 0)
        self.lattice_plot.getAxis('left').setLabel(text='lat_section')
        self.lattice_plot.setMaximumHeight(50)
        self.lattice_plot.setXLink(self.plot_top)
        self.lattice_plot.setYRange(min=-1, max=1)
        lattice_labelStyle = {'showValues': False}
        self.lattice_plot.getAxis('bottom').setStyle(**lattice_labelStyle)
        self.lattice_plot.hideAxis('bottom')
        self.lattice_plot.hideAxis('left')
        self.plot_bottom = self.plot_window.addPlot(2, 0)
        self.plot_bottom.getAxis('left').setLabel(text='R16 / R36', units='m')
        self.plot_bottom.getAxis('bottom').setLabel(text='s coordinate', units='m')
        self.plot_bottom.showGrid(x=True, y=True)
        self.plot_bottom.setXLink(self.plot_top)
        opticsFunctionsLayout.addWidget(self.plot_window)
        self.tab_opticsFunctions.setLayout(opticsFunctionsLayout)
        return True

    def _buildMagnetsFrame(self):
        boldFont = QFont()
        boldFont.setBold(True)

        controlsBox = QGroupBox("Controls")
        controlsLayout = QGridLayout()
        controlsLayout.addWidget(QLabel('Current optics:'), 0, 0, 1, 1)
        self.current_optics_file = QLabel('default')
        self.current_optics_file.setFont(boldFont)
        self.current_optics_file.setAlignment(Qt.AlignLeft | Qt.AlignVCenter)
        controlsLayout.addWidget(self.current_optics_file, 0, 1, 1, 3)

        self.load_reference_optFile = QPushButton(QIcon(QPixmap('/home/paulus/custompython/pyelegant/.icons/download.png')),
                                                  "\t\tLOAD new\n\t\treference file")
        self.save_current_optFile = QPushButton(QIcon(QPixmap('/home/paulus/custompython/pyelegant/.icons/save.png')),
                                                "\t\tSAVE current\n\t\toptics to file")
        controlsLayout.addWidget(self.load_reference_optFile, 1, 0, 1, 2)
        controlsLayout.addWidget(self.save_current_optFile, 1, 2, 1, 2)

        setting_label = QLabel('setting:')
        setting_label.setAlignment(Qt.AlignRight | Qt.AlignVCenter)
        controlsLayout.addWidget(setting_label, 2, 0, 1, 1)
        self.optics_file_setting = QSpinBox()
        self.optics_file_setting.setEnabled(False)
        controlsLayout.addWidget(self.optics_file_setting, 2, 1, 1, 1)
        format_label = QLabel("format:")
        format_label.setAlignment(Qt.AlignRight | Qt.AlignVCenter)
        controlsLayout.addWidget(format_label, 2, 2, 1, 1)
        self.save_optFile_format = QComboBox()
        self.save_optFile_format.addItems(['json', 'swesch'])
        controlsLayout.addWidget(self.save_optFile_format, 2, 3, 1, 1)

        controlsLayout.addWidget(QLabel(''), 4, 0, 1, 4)
        self.magnets_pull_from_linac = QPushButton("PULL from linac")
        self.magnets_pull_from_linac.setFixedHeight(40)
        controlsLayout.addWidget(self.magnets_pull_from_linac, 5, 0, 1, 2)
        self.magnets_push_to_linac = QPushButton("PUSH to linac")
        self.magnets_push_to_linac.setFixedHeight(40)
        controlsLayout.addWidget(self.magnets_push_to_linac, 5, 2, 1, 2)
        controlsBox.setLayout(controlsLayout)
        self.magnetsGroupLayout.addWidget(controlsBox)

        magnetsBox = QGroupBox("Magnets")
        magnetsLayout = QVBoxLayout()
        magnetsLabels = QGridLayout()
        name_label = QLabel("Name")
        name_label.setFont(boldFont)
        name_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        magnetsLabels.addWidget(name_label, 0, 0)
        des_label = QLabel("k1 design")
        des_label.setFont(boldFont)
        des_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        magnetsLabels.addWidget(des_label, 0, 1)
        real_label = QLabel("k1 real")
        real_label.setFont(boldFont)
        real_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        magnetsLabels.addWidget(real_label, 0, 2)
        diff_label = QLabel("Diff. (%)")
        diff_label.setFont(boldFont)
        diff_label.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)
        magnetsLabels.addWidget(diff_label, 0, 3)
        magnetsLabels.addWidget(QLabel("Stepsize:"), 1, 1)
        self.magnet_stepsize = QComboBox()
        self.magnet_stepsize.addItems(["1.0000", "0.1000", "0.0100", "0.0010", "0.0001"])
        self.magnet_stepsize.setCurrentIndex(1)
        magnetsLabels.addWidget(self.magnet_stepsize, 1, 2)
        self.magnets_push_all = QCheckBox("Push")
        magnetsLabels.addWidget(self.magnets_push_all, 1, 4)
        self.magnets_real_to_theory = QPushButton("design \u27f6 real")
        magnetsLabels.addWidget(self.magnets_real_to_theory, 2, 1, 1, 2)
        #self.magnets_theory_to_real = QPushButton("design \u27f5 real")
        #magnetsLabels.addWidget(self.magnets_theory_to_real, 3, 1, 1, 2)

        magnetsLayout.addLayout(magnetsLabels)

        self.scroll_area = QScrollArea()
        self.scroll_area.setFixedWidth(390)
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setAlignment(Qt.AlignCenter)
        widget = QWidget()
        self.scroll_area.setWidget(widget)
        self.magnetsLayout = QGridLayout(widget)
        magnetsLayout.addWidget(self.scroll_area)
        magnetsBox.setLayout(magnetsLayout)
        self.magnetsGroupLayout.addWidget(magnetsBox)
